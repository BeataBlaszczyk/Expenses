{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesList.js","components/Expenses/NewExpenses/newExpensesInput.js","components/Expenses/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","onChange","event","setFilter","target","value","ChartBar","barFillHeight","max","Math","round","console","log","label","style","height","Chart","values","dataPoints","map","el","maxValue","dataPoint","ExpensesChart","chartDataPoints","filteredExpenses","expense","getMonth","ExpensesList","useState","filter","expenses","item","length","id","NewExpensesInput","htmlFor","charAt","toUpperCase","slice","min","type","required","NewExpenses","newExpense","setNewExpense","inputHandler","previous","addExpense","setExpenses","random","Date","setIsExpand","isExpand","onSubmit","preventDefault","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfb78771.chunk.js","sourcesContent":["import \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props){\r\n    const month=props.date.toLocaleString('en-US', {month: 'long'});\r\n    const year=props.date.getFullYear();\r\n    const day=props.date.toLocaleString(\"en-US\", {day: '2-digit'});\r\n\r\n    return(<div className=\"expense-date \">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        </div>)\r\n}\r\n\r\nexport default ExpenseDate;","import \"./Card.css\"\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","//import react from \"react\";\r\nimport \"./ExpenseItem.css\"\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props){\r\n\r\n    \r\n\r\nreturn (<Card className=\"expense-item\"> \r\n<ExpenseDate date={props.date}/>\r\n<div  className=\"expense-item__description\">\r\n    <h2>{props.title}</h2>\r\n<div  className=\"expense-item__price\"> ${props.amount}</div>\r\n</div>\r\n</Card>\r\n)\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={ (event) => props.setFilter(event.target.value)}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n  if (props.max > 0) {\r\n    barFillHeight = Math.round(props.value  * 100 / props.max) + \"%\";\r\n    console.log(props.label +\"--\" + barFillHeight + props.value)\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\"> {props.label} </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n\r\n const values = props.dataPoints.map(el => el.value);\r\n  const maxValue = Math.max(...values);\r\n  //console.log(values);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n          max={maxValue}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props){\r\n\r\n    const chartDataPoints = [\r\n        {label: \"Jan\", value: 0},\r\n        {label: \"Feb\", value: 0},\r\n        {label: \"Mar\", value: 0},\r\n        {label: \"Apr\", value: 0},\r\n        {label: \"May\", value: 0},\r\n        {label: \"Jun\", value: 0},\r\n        {label: \"Jul\", value: 0},\r\n        {label: \"Aug\", value: 0},\r\n        {label: \"Sep\", value: 0},\r\n        {label: \"Oct\", value: 0},\r\n        {label: \"Nov\", value: 0},\r\n        {label: \"Dec\", value: 0},\r\n    ]\r\n\r\n    for (const expense of props.filteredExpenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount ;\r\n    }\r\n\r\nreturn <Chart dataPoints = {chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction ExpensesList(props) {\r\n  const [filter, setFilter] = useState(\"2022\");\r\n     const filteredExpenses = props.expenses\r\n     .filter((item) => item.date.getFullYear() == filter);\r\n\r\n\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter setFilter={setFilter} />\r\n      {props.expenses.filter((item) => item.date.getFullYear() == filter)\r\n        .length === 0 ? (\r\n        <h2 className=\"expenses-list__fallback\"> Found no expenses</h2>\r\n      ) : null}\r\n\r\n          <ExpensesChart filteredExpenses={filteredExpenses}/>\r\n\r\n      {props.expenses\r\n        .filter((item) => item.date.getFullYear() == filter)\r\n        .map((el) => (\r\n          \r\n          <ExpenseItem\r\n            key={el.id}\r\n            title={el.title}\r\n            amount={el.amount}\r\n            date={el.date}\r\n          />\r\n        ))}\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpensesList;\r\n","import \"./NewExpenses.css\"\r\n\r\nfunction NewExpensesInput(props){\r\nreturn (\r\n    <div className=\"new-expense__control\"> \r\n        <label htmlFor=\"props.id\"> {props.id.charAt(0).toUpperCase() + props.id.slice(1)} </label>\r\n        <input  min={props.min} type={props.type} value={props.value} onChange={props.onChange} id={props.id} required={true}></input>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default NewExpensesInput;","import \"./NewExpenses.css\"\r\nimport NewExpensesInput from \"./newExpensesInput\";\r\nimport Card from \"../../UI/Card\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction NewExpenses(props){\r\n\r\n    const [newExpense, setNewExpense] = useState({\r\n        title:\"\",\r\n        amount:\"\",\r\n        date:\"\"\r\n\r\n    })\r\n\r\n    \r\n        function inputHandler(event){\r\n                setNewExpense( function (previous){\r\n                        return {\r\n                            ...previous,\r\n                            [event.target.id]: (event.target.id === \"amount\") ? \r\n                            +event.target.value : event.target.value\r\n                            \r\n                        }\r\n                }) \r\n\r\n\r\n           \r\n        }\r\n\r\n        const prevent = (event) => {\r\n            event.preventDefault();\r\n            addExpense();\r\n        }\r\n\r\n        const addExpense= ()=>{\r\n            \r\n            props.setExpenses(\r\n                function (previous){\r\n                   return [\r\n                        \r\n                        {...newExpense,\r\n                        id: Math.random,\r\n                    date: new Date(newExpense.date)},\r\n                    ...previous\r\n                   ]\r\n                } \r\n            )\r\n                console.log(newExpense)\r\n            setNewExpense({\r\n                title:\"\",\r\n                amount:\"\",\r\n                date:\"\"\r\n        \r\n            })\r\n            setIsExpand(false)\r\n\r\n        }\r\n\r\nfunction addClass(event){\r\nevent.target.classList.toggle(\"alternative\")\r\n}\r\nconst [isExpand, setIsExpand] = useState(false);\r\n\r\nfunction cancelFunction(){\r\n    setNewExpense({\r\n        title:\"\",\r\n        amount:\"\",\r\n        date:\"\"})\r\n    setIsExpand(false)\r\n}\r\n\r\nfunction expandFunction(){\r\n    setIsExpand(true)\r\n}\r\n    return(\r\n        <form  onSubmit={prevent} className=\"new-expense\">\r\n        \r\n        {isExpand && (<div className=\"new-expense__controls\">\r\n            <NewExpensesInput type=\"text\" min=\"\" value={newExpense.title} onChange={inputHandler} id=\"title\"/>\r\n            <NewExpensesInput type=\"numeric\" min=\"0.1\" value={newExpense.amount} onChange={inputHandler} id=\"amount\"/>\r\n            <NewExpensesInput type=\"date\" min=\"\" value={newExpense.date} onChange={inputHandler} id=\"date\"/>\r\n            \r\n        </div>)}\r\n        \r\n        {isExpand && <button onClick={cancelFunction}> Cancel</button>}\r\n        {isExpand && <button > Add Expense</button>}\r\n\r\n        {!isExpand &&  <button onClick={expandFunction} > Add New Expense</button>}\r\n      \r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default NewExpenses;","\nimport ExpensesList from \"./components/Expenses/ExpensesList\";\nimport NewExpenses from \"./components/Expenses/NewExpenses/NewExpenses\";\n\nimport {useState} from 'react';\nimport ExpensesChart from \"./components/Expenses/ExpensesChart\";\n\nfunction App() {\n  const [expenses, setExpenses] = useState([\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ]);\n\n  \n  return (\n    <div>\n     <NewExpenses setExpenses={setExpenses} />\n    \n      <ExpensesList expenses={expenses}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}